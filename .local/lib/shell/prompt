#!/usr/bin/env bash
# shellcheck disable=SC1117

export PROMPT_COMMAND=__prompt_command

__prompt_width(){
    local stripped_ps1
    local stripped_expanded_ps1

    # Remove \[...\] with non-greedy *? operator
    stripped_ps1="$(echo -n "$1" | perl -pe 's|\\\[.*?\\\]||g')"
    stripped_expanded_ps1="${stripped_ps1@P}"
    echo -n "${#stripped_expanded_ps1}"
}

__prompt_command() {
    local exit_code="$?" # This needs to be first
    local dollar="\\\$"

    local reset='\[$(tput sgr0)\]'
    local bold='\[$(tput bold)\]'
    local red='\[$(tput setaf 1)\]'
    local green='\[$(tput setaf 2)\]'
    local yellow='\[$(tput setaf 3)\]'
    local blue='\[$(tput setaf 39)\]'
    local dark_blue='\[$(tput setaf 27)\]'
    local magenta='\[$(tput setaf 5)\]'
    local cyan='\[$(tput setaf 6)\]'

    local exit_status="\[\]"
    local user="\[\]"
    local host="\[\]"
    local dir="\[\]"
    local git="\[\]"
    local venv="\[\]"
    local term_title="\[\]"
    local trailing_sep="${dollar} "
    local ps1=""

    # Exit status code
    if [ "${exit_code}" != 0 ]; then
        exit_status="[${bold}${red}${exit_code}${reset}]"
    else
        exit_status="[${green}${exit_code}${reset}]"
    fi
    # Set red if root user
    if [ "$(id --user)" -eq 0 ]; then
        user="${bold}${red}\u${reset}"
    else
        user="${dark_blue}\u${reset}"
    fi
    # SSh
    if [ -z "${SSH_CLIENT}" ]; then
        host="${blue}\h${reset}"
    else
        if [ -z "${SSH_AUTH_SOCK}" ]; then
            host="${yellow}\h${reset}"
        else
            host="${yellow}\h${reset}"
        fi
    fi

    dir="${magenta}\w${reset} "

    # GIT
    if command -v git >/dev/null && command -v __git_ps1 >/dev/null && git rev-parse --git-dir >/dev/null 2>&1; then
        if [ -z "$(git status --porcelain)" ]; then
            # Clean repo
            git="${green}\$(__git_ps1 '(%s)')${reset} "
        else
            git="${red}\$(__git_ps1 '(%s)')${reset} "
        fi
    fi

    # Python virtualenv
    if [ -n "${VIRTUAL_ENV}" ]; then
        venv="${yellow}(venv:$(basename "${VIRTUAL_ENV}"))${reset} "
    fi

    # Concatenate elements
    ps1="${reset}${exit_status} ${user}@${host} ${dir}${git}${venv}"


    PS1="${term_title}${ps1}${trailing_sep}"

    # ensure synchronization between bash memory and history file
    history -a
}

export GIT_PS1_SHOWUNTRACKEDFILES=1
export GIT_PS1_SHOWDIRTYSTATE=1
export GIT_PS1_SHOWSTASHSTATE=1
export GIT_PS1_SHOWUPSTREAM=verbose name
export GIT_PS1_DESCRIBE_STYLE=branch
