#!/bin/bash
set -eu

msg() { printf "\033[1;34m$1\033[0m\n"; }
err() { printf "\33[31m[✘]\33[0m $1\033[0m\n" 1>&2; return 1; }
success() { printf "\33[32m[✔]\33[0m $1\033[0m\n"; }
exists() { type $1 > /dev/null 2>&1; }

if ! exists sudo; then
  err "Please install 'sudo' command."
  exit 127
fi

DIST=''
for dist in debian redhat fedora; do
  if [ -e "/etc/${dist}-release" ] || [ -e "/etc/${dist}_version" ]; then
    DIST="${dist}"
    break
  fi
done

if [ -z "${DIST}" ]; then
    err "Sorry, your operating system is not supported."
    exit 1
fi

# Install basic dependencies
msg "Installing basic packages..."
export DEBIAN_FRONTEND=noninteractive

sudo apt -y update
# utilities
sudo apt -y install bash-completion \
                    build-essential \
                    curl \
                    direnv \
                    fd-find \
                    fzf \
                    gcc \
                    git-lfs \
                    htop \
                    jq \
                    keychain \
                    less \
                    lnav \
                    man-db \
                    most \
                    nano \
                    npm \
                    python-is-python3 \
                    python3 \
                    python3-pip \
                    python3-venv \
                    ripgrep \
                    shellcheck \
                    tmux \
                    tree \
                    unzip \
                    wget
                    

rm -f ~/.local/bin/fd
ln -sfn $(which fdfind) ~/.local/bin/fd

# NPM
curl -sL https://deb.nodesource.com/setup_20.x | sudo -E bash -
sudo apt update && sudo apt install -y npm

# Install neovim on amd64
if [ "$(dpkg --print-architecture)" = "amd64" ];then
  cd $HOME
  curl -s -JLO https://github.com/neovim/neovim/releases/download/stable/nvim-linux64.tar.gz
	tar xzvf nvim-linux64.tar.gz
	rm -rdf nvim-linux64.tar.gz
  rm -rf "$HOME/.neovim" 
	mv "$HOME"/nvim-linux64 "$HOME"/.neovim
  mkdir -p "$HOME"/.local/bin/
	ln -sf "$HOME"/.neovim/bin/nvim "$HOME"/.local/bin/
fi

# Remove any previous installation and install dotfiles
if [ -d "/tmp/dotfiles" ]; then
  err "/tmp/dotfiles alredy exist! Removing ..."
  rm -rf /tmp/dotfiles
fi

git clone https://github.com/ra2f/dotfiles.git /tmp/dotfiles
bash /tmp/dotfiles/install/install
rm -rf /tmp/dotfiles

# reload .bashrc
. $HOME/.bashrc

success "Dotfiles installed, reload therminal"
