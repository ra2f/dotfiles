# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"
[manager]
keymap = [
  { on = "<C-c>", run = "escape",             desc = "Exit visual mode, clear selected, or cancel search" },
  { on = "<Esc>", run = "escape",             desc = "Exit visual mode, clear selected, or cancel search" },
  { on = "Q",     run = "quit",               desc = "Exit the process" },
  { on = "q",     run = "quit --no-cwd-file", desc = "Exit the process without writing cwd-file" },

  # Navigation
  { on = "j",            run = "arrow 1",         desc = "Move cursor down" },
  { on = "k",            run = "arrow -1",        desc = "Move cursor up" },
  { on = "<C-u>",        run = "arrow -50%",      desc = "Move cursor up half page" },
  { on = "<C-d>",        run = "arrow 50%",       desc = "Move cursor down half page" },
  { on = ["g", "g"],     run = "arrow -99999999", desc = "Move cursor to the top" },
  { on = "G",            run = "arrow 99999999",  desc = "Move cursor to the bottom" },
  { on = "h",            run = "leave",           desc = "Go back to the parent directory" },
  { on = "l",            run = "enter",           desc = "Enter the child directory" },

  # Copy/Yank/Delete/Move
  { on = ["y", "y"], run = "yank",                  desc = "Copy the selected characters" },
  { on = ["y", "f"], run = "copy path",             desc = "Copy the file path" },
  { on = ["y", "d"], run = "copy dirname",          desc = "Copy the directory path" },
  { on = ["y", "n"], run = "copy filename",         desc = "Copy the filename" },
  { on = ["y", "e"], run = "copy name_without_ext", desc = "Copy the filename without extension" },
  { on = "d",        run = "yank --cut",            desc = "Yank selected files (cut)" },
  { on = "D",        run = "remove",                desc = "Trash selected files" },
  { on = "p",        run = "paste",                 desc = "Paste the copied characters after the cursor" },

  # Selection
  { on = "<Space>", run = [ "select --state=none", "arrow 1" ], desc = "Toggle the current selection state" },
  { on = "V",       run = "visual_mode",                        desc = "Enter visual mode (selection mode)" },
  { on = "v",       run = "select_all --state=none",            desc = "Inverse selection of all files" },
  { on = "<C-a>",   run = "select_all --state=true",            desc = "Select all files" },

  # Operation
  { on = "o",       run = "open",                        desc = "Open selected files" },
  { on = "O",       run = "open --interactive",          desc = "Open selected files interactively" },
  { on = "<Enter>", run = "open",                        desc = "Open selected files" },
  { on = "e",       run = "create",                      desc = "Create a file (ends with / for directories)" },
  { on = "a",       run = "rename --cursor=before_ext",  desc = "Rename selected file(s)" },
  { on = ";",       run = "shell --interactive",         desc = "Run a shell command" },
  { on = ":",       run = "shell --block --interactive", desc = "Run a shell command (block until finishes)" },
  { on = ".",       run = "hidden toggle",               desc = "Toggle the visibility of hidden files" },
  { on = "z",       run = "plugin zoxide",               desc = "Jump to a directory using zoxide" },

  # Linemode
  { on = [ "m", "s" ], run = "linemode size",        desc = "Set linemode to size" },
  { on = [ "m", "p" ], run = "linemode permissions", desc = "Set linemode to permissions" },
  { on = [ "m", "c" ], run = "linemode ctime",       desc = "Set linemode to ctime" },
  { on = [ "m", "m" ], run = "linemode mtime",       desc = "Set linemode to mtime" },
  { on = [ "m", "o" ], run = "linemode owner",       desc = "Set linemode to owner" },
  { on = [ "m", "n" ], run = "linemode none",        desc = "Set linemode to none" },

  # Filter
  { on = ["f", "f"], run = "plugin fzf",            desc = "Jump to a directory or reveal a file using fzf" },
  { on = ["f", "s"], run = "filter --smart",        desc = "Filter files" },
  { on = ["f", "m"], run = "find --smart",          desc = "Find next file" },
  { on = "/",        run = "search fd",             desc = "Search files by name using fd" },
  { on = "n",        run = "find_arrow",            desc = "Go to the next found" },
  { on = "N",        run = "find_arrow --previous", desc = "Go to the previous found" },

  # Sorting
  { on = [ "s", "m" ], run = [ "sort modified --reverse=no", "linemode mtime" ], desc = "Sort by modified time" },
  { on = [ "s", "M" ], run = [ "sort modified --reverse", "linemode mtime" ],    desc = "Sort by modified time (reverse)" },
  { on = [ "s", "c" ], run = [ "sort created --reverse=no", "linemode ctime" ],  desc = "Sort by created time" },
  { on = [ "s", "C" ], run = [ "sort created --reverse", "linemode ctime" ],     desc = "Sort by created time (reverse)" },
  { on = [ "s", "e" ], run = "sort extension --reverse=no",                      desc = "Sort by extension" },
  { on = [ "s", "E" ], run = "sort extension --reverse",                         desc = "Sort by extension (reverse)" },
  { on = [ "s", "a" ], run = "sort alphabetical --reverse=no",                   desc = "Sort alphabetically" },
  { on = [ "s", "A" ], run = "sort alphabetical --reverse",                      desc = "Sort alphabetically (reverse)" },
  { on = [ "s", "n" ], run = "sort natural --reverse=no",                        desc = "Sort naturally" },
  { on = [ "s", "N" ], run = "sort natural --reverse",                           desc = "Sort naturally (reverse)" },
  { on = [ "s", "s" ], run = [ "sort size --reverse=no", "linemode size" ],      desc = "Sort by size" },
  { on = [ "s", "S" ], run = [ "sort size --reverse", "linemode size" ],         desc = "Sort by size (reverse)" },
  { on = [ "s", "r" ], run = "sort random --reverse=no",                         desc = "Sort randomly" },

  # Goto
  { on = [ "g", "h" ],       run = "cd ~",             desc = "Go to the home directory" },
  { on = [ "g", "c" ],       run = "cd ~/.config",     desc = "Go to the config directory" },
  { on = [ "g", "d" ],       run = "cd ~/download",    desc = "Go to the downloads directory" },
  { on = [ "g", "<Space>" ], run = "cd --interactive", desc = "Go to a directory interactively" },

  # Tasks
  { on = "w", run = "tasks_show", desc = "Show task manager" },

  # Help
  { on = "?",    run = "help", desc = "Open help" },
]

[tasks]
keymap = [
  { on = "w",       run = "close",    desc = "Close task manager" },
  { on = "k",       run = "arrow -1", desc = "Move cursor up" },
  { on = "j",       run = "arrow 1",  desc = "Move cursor down" },
  { on = "<Enter>", run = "inspect",  desc = "Inspect the task" },
  { on = "x",       run = "cancel",   desc = "Cancel the task" },
  { on = "?",       run = "help",     desc = "Open help" },
]

[select]
keymap = [
  { on = "<Esc>",   run = "close",          desc = "Cancel selection" },
  { on = "<C-[>",   run = "close",          desc = "Cancel selection" },
  { on = "<C-c>",   run = "close",          desc = "Cancel selection" },
  { on = "<Enter>", run = "close --submit", desc = "Submit the selection" },
  { on = "k", run = "arrow -1", desc = "Move cursor up" },
  { on = "j", run = "arrow 1",  desc = "Move cursor down" },
  { on = "<Up>",   run = "arrow -1", desc = "Move cursor up" },
  { on = "<Down>", run = "arrow 1",  desc = "Move cursor down" },
  { on = "?", run = "help", desc = "Open help" },
]

[input]
keymap = [
  { on = "<C-c>",   run = "close",          desc = "Cancel input" },
  { on = "<Enter>", run = "close --submit", desc = "Submit input" },
  { on = "<Esc>",   run = "escape",         desc = "Go back the normal mode, or cancel input" },
  { on = "<C-[>",   run = "escape",         desc = "Go back the normal mode, or cancel input" },

  # Mode
  { on = "i", run = "insert",                              desc = "Enter insert mode" },
  { on = "a", run = "insert --append",                     desc = "Enter append mode" },
  { on = "I", run = [ "move -999", "insert" ],             desc = "Move to the BOL, and enter insert mode" },
  { on = "A", run = [ "move 999", "insert --append" ],     desc = "Move to the EOL, and enter append mode" },
  { on = "v", run = "visual",                              desc = "Enter visual mode" },
  { on = "V", run = [ "move -999", "visual", "move 999" ], desc = "Enter visual mode and select all" },

  # Character-wise movement
  { on = "h",       run = "move -1", desc = "Move back a character" },
  { on = "l",       run = "move 1",  desc = "Move forward a character" },
  { on = "<Left>",  run = "move -1", desc = "Move back a character" },
  { on = "<Right>", run = "move 1",  desc = "Move forward a character" },
  { on = "<C-b>",   run = "move -1", desc = "Move back a character" },
  { on = "<C-f>",   run = "move 1",  desc = "Move forward a character" },

  # Word-wise movement
  { on = "b",     run = "backward",              desc = "Move back to the start of the current or previous word" },
  { on = "w",     run = "forward",               desc = "Move forward to the start of the next word" },
  { on = "e",     run = "forward --end-of-word", desc = "Move forward to the end of the current or next word" },
  { on = "<A-b>", run = "backward",              desc = "Move back to the start of the current or previous word" },
  { on = "<A-f>", run = "forward --end-of-word", desc = "Move forward to the end of the current or next word" },

  # Line-wise movement
  { on = "0",      run = "move -999", desc = "Move to the BOL" },
  { on = "$",      run = "move 999",  desc = "Move to the EOL" },
  { on = "<C-a>",  run = "move -999", desc = "Move to the BOL" },
  { on = "<C-e>",  run = "move 999",  desc = "Move to the EOL" },
  { on = "<Home>", run = "move -999", desc = "Move to the BOL" },
  { on = "<End>",  run = "move 999",  desc = "Move to the EOL" },

  # Delete
  { on = "<Backspace>", run = "backspace",         desc = "Delete the character before the cursor" },
  { on = "<Delete>",    run = "backspace --under", desc = "Delete the character under the cursor" },
  { on = "<C-h>",       run = "backspace",         desc = "Delete the character before the cursor" },
  { on = "<C-d>",       run = "backspace --under", desc = "Delete the character under the cursor" },

  # Kill
  { on = "<C-u>", run = "kill bol",      desc = "Kill backwards to the BOL" },
  { on = "<C-k>", run = "kill eol",      desc = "Kill forwards to the EOL" },
  { on = "<C-w>", run = "kill backward", desc = "Kill backwards to the start of the current word" },
  { on = "<A-d>", run = "kill forward",  desc = "Kill forwards to the end of the current word" },

  # Cut/Yank/Paste
  { on = "p",         run = "paste",                             desc = "Paste yanked files" },
  { on = "P",         run = "paste --force",                     desc = "Paste yanked files (overwrite if the destination exists)" },
  { on = "c", run = "delete --cut --insert",                     desc = "Cut the selected characters, and enter insert mode" },
  { on = "C", run = [ "delete --cut --insert", "move 999" ],     desc = "Cut until the EOL, and enter insert mode" },
  { on = ["d", "D"], run = [ "delete --cut", "move 999" ],              desc = "Cut until the EOL" },
  { on = [ "y", "f" ], run = "copy path",             desc = "Copy the file path" },
  { on = [ "y", "d" ], run = "copy dirname",          desc = "Copy the directory path" },
  { on = [ "y", "n" ], run = "copy filename",         desc = "Copy the filename" },



  # Undo/Redo
  { on = "u",     run = "undo", desc = "Undo the last operation" },
  { on = "<C-r>", run = "redo", desc = "Redo the last operation" },

  # Help
  { on = "?",    run = "help", desc = "Open help" },
]

[confirm]
keymap = [
  { on = "<C-c>",   run = "close",          desc = "Cancel the confirm" },
  { on = "y", run = "close --submit", desc = "Submit the confirm" },
  { on = "n", run = "close",          desc = "Cancel the confirm" },
  { on = "<C-p>", run = "arrow -1", desc = "Move cursor up" },
  { on = "<C-n>", run = "arrow 1",  desc = "Move cursor down" },

  # Help
  { on = "?",    run = "help", desc = "Open help" },
]

[completion]
keymap = [
  { on = "<C-c>",   run = "close",                                      desc = "Cancel completion" },
  { on = "<Tab>",   run = "close --submit",                             desc = "Submit the completion" },
  { on = "<Enter>", run = [ "close --submit", "close_input --submit" ], desc = "Submit the completion and input" },
  { on = "<A-k>", run = "arrow -1", desc = "Move cursor up" },
  { on = "<A-j>", run = "arrow 1",  desc = "Move cursor down" },
  { on = "<Up>",   run = "arrow -1", desc = "Move cursor up" },
  { on = "<Down>", run = "arrow 1",  desc = "Move cursor down" },
  { on = "<C-p>", run = "arrow -1", desc = "Move cursor up" },
  { on = "<C-n>", run = "arrow 1",  desc = "Move cursor down" },

  # Help
  { on = "?",    run = "help", desc = "Open help" },
]

[help]
keymap = [
  { on = "<Esc>", run = "escape", desc = "Clear the filter, or hide the help" },
  { on = "<C-[>", run = "escape", desc = "Clear the filter, or hide the help" },
  { on = "q",     run = "close",  desc = "Exit the process" },
  { on = "<C-c>", run = "close",  desc = "Hide the help" },

  # Navigation
  { on = "k", run = "arrow -1", desc = "Move cursor up" },
  { on = "j", run = "arrow 1",  desc = "Move cursor down" },
  { on = "<Up>",   run = "arrow -1", desc = "Move cursor up" },
  { on = "<Down>", run = "arrow 1",  desc = "Move cursor down" },

  # Filtering
  { on = "f", run = "filter", desc = "Apply a filter for the help items" },
]